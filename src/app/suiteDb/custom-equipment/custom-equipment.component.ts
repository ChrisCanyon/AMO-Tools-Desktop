import { Component, OnInit, Input, SimpleChanges, ViewChild } from '@angular/core';
import { Settings } from '../../shared/models/settings';
import { CustomEquipmentService, EquipmentData } from './custom-equipment.service';
import { ModalDirective } from 'ngx-bootstrap';
import { ImportExportService } from '../../shared/import-export/import-export.service';

@Component({
  selector: 'app-custom-equipment',
  templateUrl: './custom-equipment.component.html',
  styleUrls: ['./custom-equipment.component.css']
})
export class CustomEquipmentComponent implements OnInit {
  @Input()
  settings: Settings;

  showMotorModal: boolean = false;

  showMotor: boolean = true;

  isAllSelected: boolean = false;
  deleteModalOpen: boolean = false;
  @ViewChild('exportModal') public exportModal: ModalDirective;
  @ViewChild('importModal') public importModal: ModalDirective;
  @ViewChild('deleteModal') public deleteModal: ModalDirective;
  selectedEquipmentData: EquipmentData;
  exportModalOpen: boolean = false;
  fileReference: any;
  isValidFile: boolean;
  importing: boolean = false;

  importFileError: string;
  constructor(private customEquipmentService: CustomEquipmentService, private importExportService: ImportExportService) { }

  ngOnInit() {
    console.log('settings.unitsOfMeasure = ' + this.settings.unitsOfMeasure);
  }

  ngOnDestroy() {
    this.customEquipmentService.getSelected.next(false);
  }

  toggleModal(equipment: string) {
    switch (equipment) {
      case 'motor':
        this.showMotorModal = !this.showMotorModal;
        break;
      default:
        break;
    }

  }


  toggleMaterial(material: string) {
    switch (material) {
      case 'motor':
        this.showMotor = !this.showMotor;
        break;
      default:
        break;
    }

  }

  checkSelected() {
    this.customEquipmentService.getSelected.next(true);
    let test = this.customEquipmentService.buildSelectedData();
    if (
      test.motor.length != 0
    ) {
      return true
    } else {
      return false
    }
  }

  signalSelectAll() {
    this.customEquipmentService.selectAll.next(this.isAllSelected);
  }


  deleteData() {
    this.customEquipmentService.deleteSelected(this.selectedEquipmentData);
    this.importing = true;
    setTimeout(() => {
      this.importing = false;
      this.hideDeleteModal();
    }, 1500)
  }

  delete() {
    this.customEquipmentService.getSelected.next(true);
    this.selectedMaterialData = this.customEquipmentService.buildSelectedData();
    this.showDeleteModal();
  }

  showDeleteModal() {
    this.deleteModalOpen = true;
    this.deleteModal.show();
  }

  hideDeleteModal() {
    this.deleteModalOpen = false;
    this.deleteModal.hide();
  }

  export() {
    this.customEquipmentService.getSelected.next(true);
    this.selectedEquipmentData = this.customEquipmentService.buildSelectedData();
    this.showExportModal();
  }

  exportData() {
    this.importExportService.downloadMaterialData(this.selectedEquipmentData);
    this.hideExportModal();
  }

  showExportModal() {
    this.exportModalOpen = true;
    this.exportModal.show();
  }

  hideExportModal() {
    this.exportModalOpen = false;
    this.exportModal.hide();
  }


  setImportFile($event) {
    this.importFileError = null;
    if ($event.target.files) {
      if ($event.target.files.length != 0) {
        let regex = /.json$/;
        if (regex.test($event.target.files[0].name)) {
          this.fileReference = $event;
          this.isValidFile = true;
        } else {
          this.isValidFile = false;
        }
      }
    }
  }


  showImportModal() {
    this.importModal.show();
  }

  hideImportModal() {
    this.importFileError = null;
    this.importModal.hide();
  }

  importFile() {
    let fr: FileReader = new FileReader();
    fr.readAsText(this.fileReference.target.files[0]);
    fr.onloadend = (e) => {
      let importJson = JSON.parse(fr.result);
      if(importJson.origin){
        if(importJson.origin == 'AMO-TOOLS-DESKTOP-MATERIALS'){
          this.importFileError = null;
          delete importJson.origin;
          this.importing = true;
          this.customEquipmentService.importSelected(importJson);
          setTimeout(() => {
            this.importing = false;
            this.hideImportModal();
          }, 1500)
        }else if(importJson.origin == 'AMO-TOOLS-DESKTOP'){
          this.importFileError = 'This file can only be imported in your assessment dashboard. Use this import area for custom materials.';
        }else{
          this.importFileError = 'Unrecognized file, please only import files generated by this application.';
        }
      }
    }
  }
}
